pkgname=grub
pkgver=2.06
_UNIFONT_VER=14.0.02
pkgbuild=3
arch=("auto")

shortdesc=("GNU GRUB is a Multiboot boot loader")
longdesc=("GNU GRUB is a Multiboot boot loader. It was derived from GRUB, the GRand Unified Bootloader, which was originally designed and implemented by Erich Stefan Boleyn.")

source=("https://ftp.gnu.org/gnu/grub/grub-${pkgver}.tar.gz"
"https://ftp.gnu.org/gnu/unifont/unifont-${_UNIFONT_VER}/unifont-${_UNIFONT_VER}.bdf.gz")

tags=("base sys-boot")

build_deps=("fuse device-mapper python bzip2 xz freetype gettext texinfo bdf-unifont libarchive efibootmgr libisoburn mtools rsync")

adddep=("os-prober gettext")

# NOTE: Это опциональные зависимости: freetype fuse3 dosfstools lzop efibootmgr libisoburn os-prober mtools
removedep=("freetype fuse")

config_files=("etc/default/grub
etc/grub.d/40_custom")

#NOTE: Общая конфигурация для grub-bios, grub-efi и grub-emu
_configure_options=(
        FREETYPE="pkg-config freetype2"
        BUILD_FREETYPE="pkg-config freetype2"
        --enable-mm-debug
        --enable-nls
        --enable-device-mapper
        --enable-cache-stats
        --enable-grub-mkfont
        --enable-grub-mount
        --prefix="/usr"
        --bindir="/usr/bin"
        --sbindir="/usr/bin"
        --datarootdir="/usr/share"
        --sysconfdir="/etc"
        --program-prefix=""
        --with-bootdir="/boot"
        --with-grubdir="grub"
        --disable-silent-rules
        --disable-werror
)

build() {
  go_src_dir
  burn_patches
  echo "===> Исправим местоположение DejaVuSans.ttf, чтобы grub-mkfont мог создавать файлы *.pf2 для темы звездного поля... <==="
  sed 's|/usr/share/fonts/dejavu|/usr/share/fonts/dejavu /usr/share/fonts/TTF|g' -i "configure.ac"

  echo "===> Исправим имя OS FS#33393... <==="
  sed 's|GNU/Linux|Linux|' -i "util/grub.d/10_linux.in"

  echo "===> Загрузка последних языковых файлов... <==="
  ./linguas.sh

  echo "===> Исправление проблем с unifont во время компиляции grub... <==="
# http://savannah.gnu.org/bugs/?40330 and https://bugs.archlinux.org/task/37847
  gzip -cd ${srcache}/unifont-${_UNIFONT_VER}.bdf.gz > "unifont.bdf"

  echo "===> Делаем переводы воспроизводимыми..."
  sed -i '1i /^PO-Revision-Date:/ d' po/*.sed
  ./autogen.sh

  cp -r ${srcdir}/grub-${pkgver} ${srcdir}/grub-bios
  cp -r ${srcdir}/grub-${pkgver} ${srcdir}/grub-emu
  mv -f ${srcdir}/grub-${pkgver} ${srcdir}/grub-efi
####################################################################################################
  echo "==========================================================="
  echo "                   Сборка grub-bios                        "
  echo "==========================================================="
  cd ${srcdir}/grub-bios/
  echo "===> Запуск ./configure для сборки grub-bios... <==="
  ./configure \
    CC=gcc BUILD_CC=gcc TARGET_CC=gcc \
    CFLAGS="-Os -fuse-ld=bfd" \
    LDFLAGS="" \
    TARGET_LDFLAGS="-static" \
    --with-platform="pc" \
    --target="i386" \
    --enable-efiemu \
    --enable-boot-time \
    "${_configure_options[@]}"

    if [ ! -z "${SOURCE_DATE_EPOCH}" ]; then
           echo "===> Собрать информационные страницы... <==="
           touch -d "@${SOURCE_DATE_EPOCH}" $(find -name '*.texi')
    fi
  echo "===> Сборка grub-bios... <==="
  CFLAGS="" make -j${numjobs}

  echo "===> Установка grub-bios... <==="
  make DESTDIR=${pkgdir} bashcompletiondir="/usr/share/bash-completion/completions" install

####################################################################################################
  echo "==========================================================="
  echo "                    Build grub-efi                         "
  echo "==========================================================="
  cd ${srcdir}/grub-efi/
  echo "===> Запуск ./configure для сборки grub-efi... <==="
  ./configure \
    CFLAGS="-Os -fuse-ld=bfd" \
    LDFLAGS="" \
    TARGET_LDFLAGS="-static" \
    --with-platform="efi" \
    --target="x86_64" \
    --disable-efiemu \
    --enable-boot-time \
    "${_configure_options[@]}"
  echo "===> Сборка grub-efi... <==="
  CFLAGS="" make -j${numjobs}

  echo "===> Установка grub-efi... <==="
  make DESTDIR=${pkgdir}/ bashcompletiondir="/usr/share/bash-completion/completions" install

####################################################################################################
#  echo "==========================================================="
#  echo "                    Build grub-emu                         "
#  echo "==========================================================="
#  cd ${srcdir}/grub-emu/
#  echo "===> Запуск ./configure для сборки grub-emu... <==="
#  ./configure \
#    --with-platform="emu" \
#    --target=x86_64 \
#    --enable-grub-emu-usb=no \
#    --enable-grub-emu-sdl=no \
#    --disable-grub-emu-pci \
#    "${_configure_options[@]}"
#  echo "===> Сборка grub-emu... <==="
#  CFLAGS="" make -j${numjobs}

#  echo "===> Установка grub-emu... <==="
#  make DESTDIR=${pkgdir}/ bashcompletiondir="/usr/share/bash-completion/completions" install

####################################################################################################

  echo "===> Удаляем файлы, связанные с отладкой gdb... <==="
  rm -f ${pkgdir}/usr/lib/grub/i386-pc/*.module || true
  rm -f ${pkgdir}/usr/lib/grub/i386-pc/*.image || true
  rm -f ${pkgdir}/usr/lib/grub/i386-pc/{kernel.exec,gdb_grub,gmodule.pl} || true

  rm -f ${pkgdir}/usr/lib/grub/x86_64-efi/*.module || true
  rm -f ${pkgdir}/usr/lib/grub/x86_64-efi/*.image || true
  rm -f ${pkgdir}/usr/lib/grub/x86_64-efi/{kernel.exec,gdb_grub,gmodule.pl} || true

#  rm -f ${pkgdir}/usr/lib/grub/x86_64-emu/*.module || true
#  rm -f ${pkgdir}/usr/lib/grub/x86_64-emu/*.image || true
#  rm -f ${pkgdir}/usr/lib/grub/x86_64-emu/{kernel.exec,gdb_grub,gmodule.pl} || true

  sed -e "s/%PKGVER%/${pkgver}/" < ${filedir}/sbat.csv > ${pkgdir}/usr/share/grub/sbat.csv

  echo "===> Установка /etc/default/grub... <==="
  install -Dm644 ${filedir}/grub.default ${pkgdir}/etc/default/grub

  echo "===> Установка конфига поиска memtest... <==="
  install -Dm755 ${filedir}/20_memtest86+ ${pkgdir}/etc/grub.d/20_memtest86+

  echo "===> Устанавливаем фон AgaliaLinux по умолчанию... <==="
  install -Dm644 ${filedir}/grub640.png ${pkgdir}/boot/grub/grub640.png

  echo "===> Шрифт по умолчанию... <==="
  xzcat ${filedir}/unifont.pf2.xz > ${pkgdir}/boot/grub/unifont.pf2
}
