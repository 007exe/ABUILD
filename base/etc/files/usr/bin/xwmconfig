#!/bin/sh

# First, let's bail if our being here doesn't make sense:
if [ ! -d $T_PX/etc/X11/xinit ]; then
  exit
fi
if [ "`cd $T_PX/etc/X11/xinit ; echo *.*`" = '*.*' ]; then
  exit
fi

. gettext.sh
export TEXTDOMAIN=xwmconfig

USE_NLS=yes

# i18n stuff
if test "$USE_NLS" = "yes" && type -p gettext > /dev/null; then
  xecho() {
    gettext -s "$*"
  }
else
  xecho() {
    echo "$*"
  }
  gettext() {
    echo -n "$*"
  }
fi

if [ "$USER" = "root" ]; then
  TMP=/var/log/setup/tmp
else
  TMP=$HOME/.xwmconfig
fi

if [ ! -d $TMP ]; then
 mkdir -p $TMP
 chmod 700 $TMP
fi

# Do we already have an existing default?
unset PRESELECT
if [ -L $T_PX/etc/X11/xinit/xinitrc ]; then
  CURRENT="`/bin/ls -l $T_PX/etc/X11/xinit/xinitrc | cut -f 2 -d '>' | cut -b2-`"
  PRESELECT=" --default-item $CURRENT "
fi

# Figure out who we are and set up some background information:
if [ "$USER" = "root" ]; then
  BACKTITLE="--backtitle \"$(gettext "Setting system-wide default window manager in /etc/X11/xinit/")\""
else
  BACKTITLE="--backtitle \"$(gettext "Setting default window manager in") $HOME/.xinitrc\""
fi

# This stops --backtitle from cluttering the initial install:
if [ ! -r /proc/kcore ]; then
  BACKTITLE=""
fi

# Remove any previous script:
rm -f $TMP/tmpscript.sh

# Add the top of the script:
cat << EOF > $TMP/tmpscript.sh
#!/bin/sh
dialog --title "$(gettext "CHOOSE WINDOW MANAGER")" $PRESELECT --colors --menu \\
"$(gettext "Choose window manager, which will be used with startx by default.")\n\n \\
\Z1$(gettext "ATTENTION! This setting applies only when starting X11 from startx!!!")\n \\
$(gettext "If you are using graphical login manager, use 'Session type' menu")\n \\
$(gettext "inside login manager.")\Zn" 16 73 5 \\
EOF

# Add KDE as the first and default entry:
if [ -r $T_PX/etc/X11/xinit/xinitrc.kde ]; then
  echo "\"xinitrc.kde\" \"KDE: K Desktop Environment\" \\" >> $TMP/tmpscript.sh
fi

# Then, we add GNOME:
if [ -r $T_PX/etc/X11/xinit/xinitrc.gnome ]; then
    echo "\"xinitrc.gnome\" \"GNOME: GNU Network Object Model Environment\" \\" >> $TMP/tmpscript.sh
fi

# Add XFce:
if [ -r $T_PX/etc/X11/xinit/xinitrc.xfce ]; then
  echo "\"xinitrc.xfce\" \"The Cholesterol Free Desktop Environment\" \\" >> $TMP/tmpscript.sh
fi

# Add Blackbox:
if [ -r $T_PX/etc/X11/xinit/xinitrc.blackbox ]; then
  echo "\"xinitrc.blackbox\" \"The blackbox window manager\" \\" >> $TMP/tmpscript.sh
fi

# Add Fluxbox:
if [ -r $T_PX/etc/X11/xinit/xinitrc.fluxbox ]; then
  echo "\"xinitrc.fluxbox\" \"The fluxbox window manager\" \\" >> $TMP/tmpscript.sh
fi

# Add Enlightenment:
if [ -r $T_PX/etc/X11/xinit/xinitrc.e ]; then
  echo "\"xinitrc.e\" \"Enlightenment\" \\" >> $TMP/tmpscript.sh
fi

# Add WindowMaker:
if [ -r $T_PX/etc/X11/xinit/xinitrc.wmaker ]; then
  echo "\"xinitrc.wmaker\" \"WindowMaker\" \\" >> $TMP/tmpscript.sh
fi

# Add FVWM2:
if [ -r $T_PX/etc/X11/xinit/xinitrc.fvwm2 ]; then
  echo "\"xinitrc.fvwm2\" \"F(?) Virtual Window Manager (version 2.xx)\" \\" >> $TMP/tmpscript.sh
fi

# Add FVWM95:
if [ -r $T_PX/etc/X11/xinit/xinitrc.fvwm95 ]; then
  echo "\"xinitrc.fvwm95\" \"FVWM2 with a Windows look and feel\" \\" >> $TMP/tmpscript.sh
fi

# Add icewm:
if [ -r $T_PX/etc/X11/xinit/xinitrc.icewm ]; then
  echo "\"xinitrc.icewm\" \"ICE Window Manager\" \\" >> $TMP/tmpscript.sh
fi

# Add sawfish:
if [ -r $T_PX/etc/X11/xinit/xinitrc.sawfish ]; then
  echo "\"xinitrc.sawfish\" \"Sawfish without GNOME\" \\" >> $TMP/tmpscript.sh
fi

# Add mwm:
if [ -r $T_PX/etc/X11/xinit/xinitrc.mwm ]; then
  echo "\"xinitrc.mwm\" \"Motif WM\" \\" >> $TMP/tmpscript.sh
fi

# Add awesome:
if [ -r $T_PX/etc/X11/xinit/xinitrc.awesome ]; then
  echo "\"xinitrc.awesome\" \"Awesome Window Manager\" \\" >> $TMP/tmpscript.sh
fi

# Add twm:
if [ -r $T_PX/etc/X11/xinit/xinitrc.twm ]; then
  echo "\"xinitrc.twm\" \"TWM Window Manager\" \\" >> $TMP/tmpscript.sh
fi

# Now, add support for the other window managers:
( cd $T_PX/etc/X11/xinit
  for file in xinitrc.* ; do
    if [ ! "$file" = "xinitrc.kde" -a \
         ! "$file" = "xinitrc.gnome" -a \
         ! "$file" = "xinitrc.e" -a \
         ! "$file" = "xinitrc.wmaker" -a \
         ! "$file" = "xinitrc.fvwm2" -a \
         ! "$file" = "xinitrc.fvwm95" -a \
         ! "$file" = "xinitrc.icewm" -a \
         ! "$file" = "xinitrc.twm" -a \
         ! "$file" = "xinitrc.mwm" -a \
         ! "$file" = "xinitrc.xfce" -a \
         ! "$file" = "xinitrc.blackbox" -a \
         ! "$file" = "xinitrc.fluxbox" -a \
         ! "$file" = "xinitrc.sawfish" -a \
         ! "$file" = "xinitrc.awesome" -a \
         ! "$file" = "xinitrc.twm" ]; then
      echo "\"$file\" \"$file\" \\" >> $TMP/tmpscript.sh
    fi
  done
)

# Then, the tail end:
cat << EOF >> $TMP/tmpscript.sh
2> $TMP/output
if [ ! \$? = 0 ]; then
  rm -f $TMP/output
  exit
fi
EOF

sh $TMP/tmpscript.sh

if [ ! -r $TMP/output ]; then
  rm -f $TMP/tmpscript.sh
  exit
fi

OUTPUT=`cat $TMP/output`

# If xwmconfig is run by root, it changes the system-wide default for users
# that do not have a $HOME/.xinitrc:
if [ "$USER" = "root" ]; then
  if [ -r $T_PX/etc/X11/xinit/$OUTPUT ]; then
    ( cd $T_PX/etc/X11/xinit ; rm -f xinitrc ; ln -sf $OUTPUT xinitrc )
  fi
fi

# Also set up a new $HOME/.xinitrc:
if [ -r $T_PX/etc/X11/xinit/$OUTPUT -a ! "$HOME" = "/" ]; then
  if [ -r $HOME/.xinitrc ]; then
    rm -f $HOME/.xinitrc-backup
    mv $HOME/.xinitrc $HOME/.xinitrc-backup
  fi
  cat $T_PX/etc/X11/xinit/$OUTPUT > $HOME/.xinitrc
fi

rm -f $TMP/tmpscript.sh $TMP/output

