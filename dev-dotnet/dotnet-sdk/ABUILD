pkgname=dotnet-sdk
#pkglist=("dotnet-host dotnet-runtime aspnet-runtime netstandard-targeting-pack dotnet-targeting-pack aspnet-targeting-pack dotnet-source-built-artifacts")
pkgver=7.0.305
pkgbuild=1
strict_version=1
arch=("auto")

_bootstrap=false

shortdesc=("The .NET Core SDK.")

source=("git:https://github.com/dotnet/installer.git")

tags=("develop dev-dotnet")

host_adddep=("gcc-libs glibc")

runtime_adddep=("gcc-libs glibc icu krb5 libunwind zlib openssl")

sdk_adddep=("glibc gcc-libs")

adddep=("${sdk_adddep} dotnet-runtime dotnet-targeting-pack netstandard-targeting-pack")

build_deps=("${sdk_adddep} ${host_adddep} ${runtime_adddep} bash clang cmake dotnet-sdk
dotnet-source-built-artifacts inetutils libgit2 libxml2 lldb llvm lttng-ust2.12 nodejs")

# NOTE: Переходим к коммиту
# FIXME: mkpkg не умеет самостоятельно переключаться по веткам и коммитам
before_build() {
  go_src_dir
  git checkout v${pkgver}
}

build() {
  go_src_dir
  export COMPlus_LTTng=0
  export VERBOSE=1
  export OPENSSL_ENABLE_SHA1_SIGNATURES=1

  CFLAGS=$(echo $CFLAGS  | sed -e 's/-fstack-clash-protection//' )
  CXXFLAGS=$(echo $CXXFLAGS  | sed -e 's/-fstack-clash-protection//' )
  export EXTRA_CFLAGS="$CFLAGS"
  export EXTRA_CXXFLAGS="$CXXFLAGS"
  export EXTRA_LDFLAGS="$LDFLAGS"
  unset CFLAGS
  unset CXXFLAGS
  unset LDFLAGS

  ./build.sh \
    /p:ArcadeBuildTarball=true \
    /p:TarballDir="${srcdir}"/sources

  cd ${srcdir}/sources

  pushd src/runtime
  sed -i -E 's|( /p:BuildDebPackage=false)|\1 /p:EnablePackageValidation=false|' eng/SourceBuild.props
  sed -i -E 's|( /p:BuildDebPackage=false)|\1 --cmakeargs -DCLR_CMAKE_USE_SYSTEM_LIBUNWIND=TRUE|' eng/SourceBuild.props
# https://github.com/dotnet/runtime/issues/79196
  burn_patches
  popd

  if [[ $_bootstrap ]]; then
    ./prep.sh --bootstrap
    ./build.sh \
      -- \
      /v:n \
      /p:ContinueOnPrebuiltBaselineError=true \
      /p:LogVerbosity=n \
      /p:MinimalConsoleLogOutput=false \
      /p:PrebuiltPackagesPath=${srcdir}/sources/packages \
      /p:SkipPortableRuntimeBuild=true
  else
    cp -r /usr/share/dotnet .
    ln -sf /usr/share/dotnet/source-built-artifacts/Private.SourceBuilt.Artifacts.*.tar.gz packages/archive/
    ./build.sh \
      --with-sdk ${srcdir}/sources/dotnet
      -- \
      /v:n \
      /p:ContinueOnPrebuiltBaselineError=true \
      /p:LogVerbosity=n \
      /p:MinimalConsoleLogOutput=false \
      /p:PrebuiltPackagesPath="${srcdir}"/sources/packages \
      /p:SkipPortableRuntimeBuild=true
  fi
}

after_build(){
  go_src_dir
  install -dm 755 ${pkgdir}/usr/share/{dotnet,licenses}
  bsdtar -xf sources/artifacts/x64/Release/dotnet-sdk-${pkgver%.*.sdk*}.${pkgver#*sdk}-arch-x64.tar.gz -C ${pkgdir}/usr/share/dotnet/ --no-same-owner sdk sdk-manifests templates
  ln -s dotnet-host ${pkgdir}/usr/share/licenses/dotnet-sdk
}

# dotnet-host #######################################################################

dotnet-host() {
  pkgname=dotnet-host
  shortdesc=("A generic driver for the .NET Core Command Line Interface.")
  adddep=("${host_adddep}")
}

dotnet-host_prep() {
  cd ${srcdir}
  install -dm 755 ${pkgdir}/{etc/profile.d,usr/{bin,lib,share/{dotnet,licenses/dotnet-host}}}
  bsdtar -xf sources/artifacts/x64/Release/dotnet-sdk-${pkgver%.*.sdk*}.${pkgver#*sdk}-arch-x64.tar.gz -C ${pkgdir}/usr/share/dotnet/ --no-same-owner dotnet host
  bsdtar -xf sources/artifacts/x64/Release/dotnet-sdk-${pkgver%.*.sdk*}.${pkgver#*sdk}-arch-x64.tar.gz -C ${pkgdir}/usr/share/licenses/dotnet-host/ --no-same-owner LICENSE.txt ThirdPartyNotices.txt
  ln -s /usr/share/dotnet/dotnet ${pkgdir}/usr/bin/dotnet
  ln -s /usr/share/dotnet/host/fxr/${pkgver%.sdk*}/libhostfxr.so ${pkgdir}/usr/lib/libhostfxr.so
  install -Dm 644 sources/src/sdk/scripts/register-completions.bash ${pkgdir}/usr/share/bash-completion/completions/dotnet
  install -Dm 644 sources/src/sdk/scripts/register-completions.zsh ${pkgdir}/usr/share/zsh/site-functions/_dotnet
  install -Dm 644 dotnet.sh -t ${pkgdir}/etc/profile.d/
}

# dotnet-runtime #######################################################################

dotnet-runtime() {
  pkgname=dotnet-runtime
  shortdesc=("The .NET Core runtime.")
  adddep=("${runtime_adddep} dotnet-host")
}

dotnet-runtime_prep() {
  cd ${srcdir}
  install -dm 755 ${pkgdir}/usr/share/{dotnet,licenses}
  bsdtar -xf sources/artifacts/x64/Release/dotnet-sdk-${pkgver%.*.sdk*}.${pkgver#*sdk}-arch-x64.tar.gz -C ${pkgdir}/usr/share/dotnet/ --no-same-owner shared/Microsoft.NETCore.App
  ln -s dotnet-host ${pkgdir}/usr/share/licenses/dotnet-runtime
}

# aspnet-runtime #######################################################################

aspnet-runtime() {
  pkgname=aspnet-runtime
  shortdesc=("The ASP.NET Core runtime.")
  adddep=("dotnet-runtime")
}

aspnet-runtime_prep() {
  cd ${srcdir}
  install -dm 755 ${pkgdir}/usr/share/{dotnet,licenses}
  bsdtar -xf sources/artifacts/x64/Release/dotnet-sdk-${pkgver%.*.sdk*}.${pkgver#*sdk}-arch-x64.tar.gz -C ${pkgdir}/usr/share/dotnet/ --no-same-owner shared/Microsoft.AspNetCore.App
  ln -s dotnet-host ${pkgdir}/usr/share/licenses/aspnet-runtime
}

# netstandard-targeting-pack #######################################################################

netstandard-targeting-pack() {
  pkgname=netstandard-targeting-pack
  shortdesc=("The .NET Standard targeting pack.")
}

netstandard-targeting-pack_prep() {
  cd ${srcdir}
  install -dm 755 ${pkgdir}/usr/share/{dotnet,licenses}
  bsdtar -xf sources/artifacts/x64/Release/dotnet-sdk-${pkgver%.*.sdk*}.${pkgver#*sdk}-arch-x64.tar.gz -C ${pkgdir}/usr/share/dotnet/ --no-same-owner packs/NETStandard.Library.Ref
  ln -s dotnet-host ${pkgdir}/usr/share/licenses/netstandard-targeting-pack

}

# dotnet-targeting-pack #######################################################################

dotnet-targeting-pack() {
  pkgname=dotnet-targeting-pack
  shortdesc=("The .NET Core targeting pack.")
  adddep=("netstandard-targeting-pack")
}

dotnet-targeting-pack_prep() {
  cd ${srcdir}
  install -dm 755 ${pkgdir}/usr/share/{dotnet,licenses}
  bsdtar -xf sources/artifacts/x64/Release/dotnet-sdk-${pkgver%.*.sdk*}.${pkgver#*sdk}-arch-x64.tar.gz -C ${pkgdir}/usr/share/dotnet/ --no-same-owner packs/Microsoft.NETCore.App.{Host.arch-x64,Ref}
  ln -s dotnet-host ${pkgdir}/usr/share/licenses/dotnet-targeting-pack
}

# aspnet-targeting-pack #######################################################################

aspnet-targeting-pack() {
  pkgname=aspnet-targeting-pack
  shortdesc=("The ASP.NET Core targeting pack.")
  adddep=("dotnet-targeting-pack")
}

aspnet-targeting-pack_prep() {
  cd ${srcdir}
  install -dm 755 ${pkgdir}/usr/share/{dotnet,licenses}
  bsdtar -xf sources/artifacts/x64/Release/dotnet-sdk-${pkgver%.*.sdk*}.${pkgver#*sdk}-arch-x64.tar.gz -C ${pkgdir}/usr/share/dotnet/ --no-same-owner packs/Microsoft.AspNetCore.App.Ref
  ln -s dotnet-host ${pkgdir}/usr/share/licenses/aspnet-targeting-pack
}

# dotnet-source-built-artifacts #######################################################################

dotnet-source-built-artifacts() {
  pkgname=dotnet-source-built-artifacts
  shortdesc=("Internal package for building the .NET Core SDK.")
}

dotnet-source-built-artifacts_prep() {
  cd ${srcdir}
  install -Dm 644 sources/artifacts/x64/Release/Private.SourceBuilt.Artifacts.*.tar.gz -t ${pkgdir}/usr/share/dotnet/source-built-artifacts/
}
