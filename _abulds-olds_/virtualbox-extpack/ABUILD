#----------------------------- General vars --------------------------------------
##all thanks go to stuff listed in.
#http://aur.archlinux.org/packages/virtualbox_bin/virtualbox_bin/PKGBUILD
#
#------------------------- Основные переменные -----------------------------------
pkgname=virtualbox
pkgver=4.3.6
pkgbuild=1
arch=('auto')


shortdesc=("VirtualBox: Powerful x86 virtualization")
longdesc=("VirtualBox: Personal Use Binaries Edition")

_boxbuild=91406
if [ "$ARCH" = "i686" ];then
_suffix=Linux_x86
elif [ "$ARCH" = "x86_64" ];then
_suffix=Linux_amd64
fi
source=("http://download.virtualbox.org/virtualbox/${pkgver}/VirtualBox-${pkgver}-${_boxbuild}-${_suffix}.run n"
"http://download.virtualbox.org/virtualbox/${pkgver}/Oracle_VM_VirtualBox_Extension_Pack-${pkgver}.vbox-extpack n")


tags="app-emulation xapps proprietary"

adddep="virtualbox-kernel>=${pkgver}"

pkglist="extpack"

build() {
	set -e
	echo yes | sh ${srcache}/VirtualBox-${pkgver}-${_boxbuild}-${_suffix}.run --target ${srcdir} --nox11 --noexec || exit 1

	install -dm755 ${pkgdir}/{opt/VirtualBox,usr/bin,etc/udev/rules.d,etc/init.d,usr/share/applications,usr/share/pixmaps,etc/vbox}
	cd ${pkgdir}/opt/VirtualBox || exit 1
	tar -jxf ${srcdir}/VirtualBox.tar.bz2 || exit 1
	if egrep '^HARDENED="1"' "${srcdir}/install.sh" &> /dev/null; then
		chmod 4511 "VirtualBox" "VBoxSDL" "VBoxHeadless" "VBoxNetDHCP"
		for _n in "VBoxVMM.so" "VBoxREM.so" "VBoxRT.so" "VBoxDDU.so" "VBoxXPCOM.so"; do
			ln -sf "/opt/VirtualBox/${_n}" "components"
		done
		chmod go-w .
	fi

	# VBoxNetAdpCtl needs to be suid root even if this is not a hardened build.
	chmod 4511 "VBoxNetAdpCtl"

	# prepare Init script for Vbox modules loading.
	install -m755 ${srcdir}/vboxdrv.sh ${pkgdir}/opt/VirtualBox/rc.vboxdrv
	install -m755 ${filedir}/vboxdrv.init ${pkgdir}/etc/init.d/vboxdrv


	# Replace VirtualBox built-in Qt by system Qt libraries.
	# Fixes problems with some KDE themes reported by users.
	rm "libQtCoreVBox.so.4" "libQtGuiVBox.so.4" "libQtNetworkVBox.so.4" "libQtOpenGLVBox.so.4"
	ln -s "/usr/lib${LIBDIRSUFFIX}/libQtCore.so.4" "libQtCoreVBox.so.4"
	ln -s "/usr/lib${LIBDIRSUFFIX}/libQtGui.so.4" "libQtGuiVBox.so.4"
	ln -s "/usr/lib${LIBDIRSUFFIX}/libQtNetwork.so.4" "libQtNetworkVBox.so.4"
	ln -s "/usr/lib${LIBDIRSUFFIX}/libQtOpenGL.so.4" "libQtOpenGLVBox.so.4"

	# So remove the SDK stuff.
	rm -Rf sdk vboxshell.py VBoxPython*
	for _app in "VirtualBox" "VBoxHeadless" "VBoxManage" "VBoxSDL" "VBoxSVC" \
		"VBoxTunctl" "VBoxNetAdpCtl" "rdesktop-vrdp"; do
		ln -s "/opt/VirtualBox/${_app}" "../../usr/bin/${_app}"
	done

	# Copy the desktop icon
	cp "${pkgdir}/opt/VirtualBox/VBox.png" "${pkgdir}/usr/share/pixmaps/virtualbox.png"
	# Move .desktop file
	mv "${pkgdir}/opt/VirtualBox/virtualbox.desktop" "${pkgdir}/usr/share/applications/VirtualBox.desktop"

	# Add udev rules
	echo 'KERNEL=="vboxdrv", NAME="vboxdrv", OWNER="root", GROUP="vboxusers", MODE="0660"' \
		>  ${pkgdir}/etc/udev/rules.d/10-vboxdrv.rules
	echo 'SUBSYSTEM=="usb_device", GROUP="vboxusers", MODE="0664"'\
		>> ${pkgdir}/etc/udev/rules.d/10-vboxdrv.rules
	echo 'SUBSYSTEM=="usb", ENV{DEVTYPE}=="usb_device", GROUP="vboxusers", MODE="0664"'\
		>> ${pkgdir}/etc/udev/rules.d/10-vboxdrv.rules
 
	# Point the installation directory to vbox     
	echo '# VirtualBox installation directory' > "${pkgdir}/etc/vbox/vbox.cfg"
	echo 'INSTALL_DIR="/opt/VirtualBox"'      > "${pkgdir}/etc/vbox/vbox.cfg"
	set +e
}

extpack()
{
	pkgname=virtualbox-extpack
	arch=auto
	shortdesc="Oracle VirtualBox Extension Pack"
	longdesc="Support for USB 2.0 devices, VirtualBox RDP and PXE boot for Intel cards."
	adddep="virtualbox=${pkgver}"
}

extpack_prep() {
	install -Dm644 ${srcache}/Oracle_VM_VirtualBox_Extension_Pack-${pkgver}.vbox-extpack ${pkgdir}/usr/share/virtualbox/extensions/Oracle_VM_VirtualBox_Extension_Pack.vbox-extpack
	install -Dm755 ${filedir}/extpack.sh ${pkgdir}/install/doinst.sh
}

