#ABUILD created by/создан: NK, nk-man at yandex.ru 
#----------------------------- General vars --------------------------------------
#------------------------- Основные переменные -----------------------------------
pkgname=festival-voices
pkgver=2.1
pkgbuild=1
arch=('noarch')

shortdesc="Building Voices in Festival"
#-ruler---|--------------------------------------------------------------------------|
longdesc=("http://festvox.org")

source=("http://www.cstr.ed.ac.uk/downloads/festival/${pkgver}/festvox_cmu_us_awb_cg.tar.gz"
	"http://www.cstr.ed.ac.uk/downloads/festival/${pkgver}/festvox_cmu_us_rms_cg.tar.gz"
	"http://www.cstr.ed.ac.uk/downloads/festival/${pkgver}/festvox_cmu_us_slt_arctic_hts.tar.gz"
	"http://www.cstr.ed.ac.uk/downloads/festival/${pkgver}/festvox_kallpc16k.tar.gz"
	"http://www.cstr.ed.ac.uk/downloads/festival/${pkgver}/festvox_rablpc16k.tar.gz"
	"http://www.cstr.ed.ac.uk/downloads/festival/1.95/festvox_kedlpc16k.tar.gz"
)

#"http://www.cstr.ed.ac.uk/downloads/festival/${pkgver}/festvox_rablpc16k.tar.gz"
#"http://www.cstr.ed.ac.uk/downloads/festival/1.95/festvox_kedlpc16k.tar.gz"
#)

patch_opts=("")

#----------------------------- AgiliaLinux vars --------------------------------------
#--------------------- Специфичные для AgiliaLinux ------------------------------
#short and long tags / длинный и короткий тег
tags="media-libs utils"

#dependencies only needed to build package
build_deps=""

provides=""

# Old version and packages
conflicts="festvox-festival"

adddep="festival"
removedep=""

#for multi pkg abuild
pkglist=

#Set number of jobs while compliling, otherwise it'll be autodetected
#numjobs=1

#additional files should be copied into /usr/docs/${pkgname} dir from sources
docs=
gendeps_blacklist=

#custom_opts: skip_validate skip_gendeps no_postperm no_strip
custom_opts="skip_gendeps"

#----------------------------- Make PKG --------------------------------------
#-------------------------- Сборка пакета ------------------------------------

#ran before function build()
#запускается перед сборкой
before_build()
{
echo ""
}

build()
{
go_src_dir
burn_patches
}


#ran after function build() 
#после сборки
after_build()
{
echo ""

  cd ${srcdir}
  install -d "${pkgdir}/usr/share/festival/voices/" || exit 1

# festival-us
  cp -rf festival/lib/voices/us "${pkgdir}/usr/share/festival/voices/" || exit 1

# festival-english
  cp -rf festival/lib/voices/english "${pkgdir}/usr/share/festival/voices/" || exit 1

# doc
install -D -m644 $srcdir/festival/lib/voices/english/kal_diphone/COPYING \
	$pkgdir/usr/doc/$pkgname-$pkgver/COPYING.voice_kal_diphone || exit 1
install -D -m644 $srcdir/festival/lib/voices/english/rab_diphone/COPYING \
	$pkgdir/usr/doc/$pkgname-$pkgver/COPYING.voice_rab_diphone || exit 1

install -D -m644 $srcdir/festival/lib/voices/us/cmu_us_slt_arctic_hts/COPYING \
	$pkgdir/usr/doc/$pkgname-$pkgver/COPYING.voice_cmu_us_slt_arctic_hts || exit 1

install -D -m644 $srcdir/festival/lib/voices/english/ked_diphone/COPYING \
	$pkgdir/usr/doc/$pkgname-$pkgver/COPYING.voice_ked_diphone || exit 1

#rm -fv $pkgdir/usr/share/festival/voices/*/*/COPYING || exit 1

}
