pkgname=gcc
pkglist=("gcc-libs gcc-ada gcc-d gcc-fortran gcc-go gcc-objc lib32-gcc-libs")
pkgver=12.2.0
pkgbuild=3
arch=("auto")

shortdesc=("The GNU Compiler Collection - C and C++ frontends.")

source=("https://sourceware.org/pub/gcc/releases/gcc-${pkgver}/gcc-${pkgver}.tar.xz")

tags=("develop sys-devel")

build_deps=("binutils doxygen gcc-ada isl libmpc python zstd flex gcc-d gcc-fortran gcc-go gcc-objc lib32-gcc-libs zlib gmp mpfr")

adddep=("binutils bison gcc-libs==${pkgver}")

TARGET=x86_64-pc-linux-gnu

_libdir=usr/lib/gcc/${TARGET}/${pkgver%%+*}

before_build() {
  go_src_dir
  burn_patches

# Исправление ошибки, связанную с libasan.a
  sed -e '/static.*SIGSTKSZ/d' \
    -e 's/return kAltStackSize/return SIGSTKSZ * 4/' \
    -i libsanitizer/sanitizer_common/sanitizer_posix_libcdep.cpp

# Не запускать fixincludes
  sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

# Установить библиотеки x86_64 в /lib
  sed -e '/m64=/s/lib64/lib/' \
    -e '/m32=/s/m32=.*/m32=..\/lib32$(call if_multiarch,:i386-linux-gnu)/' \
    -i.orig gcc/config/i386/t-linux64

# Настройка тестов
  sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" {libiberty,gcc}/configure
  mkdir -p gcc-build
}

build() {
  cd ${srcdir}/gcc-${pkgver}/gcc-build

  ../configure \
    --prefix=/usr \
    --libdir=/usr/lib \
    --mandir=/usr/share/man \
    --infodir=/usr/share/info \
    --enable-lto \
    --enable-plugin \
    --enable-shared \
    --enable-cet=auto \
    --enable-clocale=gnu \
    --enable-default-pie \
    --enable-default-ssp \
    --enable-__cxa_atexit \
    --enable-threads=posix \
    --enable-linker-build-id \
    --enable-checking=release \
    --enable-install-libiberty \
    --enable-gnu-unique-object \
    --enable-libstdcxx-backtrace \
    --enable-link-serialization=1 \
    --enable-gnu-indirect-function \
    --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d \
    --disable-libssp \
    --disable-werror \
    --enable-multilib \
    --disable-bootstrap \
    --disable-libstdcxx-pch \
    --disable-libunwind-exceptions \
    --with-isl \
    --with-system-zlib \
    --with-linker-hash-style=gnu \
    --with-build-config=bootstrap-lto \
    gdc_include_dir=/usr/include/dlang/gdc
  CFLAGS=${CFLAGS/-Werror=format-security/}
  CXXFLAGS=${CXXFLAGS/-Werror=format-security/}
  make -j${numjobs} STAGE1_CFLAGS="-O2" \
          BOOT_CFLAGS="$CFLAGS" \
          BOOT_LDFLAGS="$LDFLAGS" \
          LDFLAGS_FOR_TARGET="$LDFLAGS"

#NOTE: --enable-bootstrap	При включении данной опции компилятор будит несколько раз пересобираться что сильно увеличит сборку.

# Сборка документации
  make -C ${TARGET}/libstdc++-v3/doc doc-man-doxygen

# Установка компонентов gcc #############################################################################################
  cd ${srcdir}/gcc-${pkgver}/gcc-build

  make -C gcc DESTDIR=${pkgdir} install-driver install-cpp install-gcc-ar c++.install-common install-headers install-plugin install-lto-wrapper

  install -m755 -t ${pkgdir}/usr/bin/ gcc/gcov{,-tool}
  install -m755 -t ${pkgdir}/${_libdir}/ gcc/{cc1,cc1plus,collect2,lto1}

  make -C ${TARGET}/libgcc DESTDIR=${pkgdir} install
  make -C ${TARGET}/32/libgcc DESTDIR=${pkgdir} install
  rm -f ${pkgdir}/usr/lib{,32}/libgcc_s.so*

  make -C ${TARGET}/libstdc++-v3/src        DESTDIR=${pkgdir} install
  make -C ${TARGET}/libstdc++-v3/include    DESTDIR=${pkgdir} install
  make -C ${TARGET}/libstdc++-v3/libsupc++  DESTDIR=${pkgdir} install
  make -C ${TARGET}/libstdc++-v3/python     DESTDIR=${pkgdir} install
  make -C ${TARGET}/32/libstdc++-v3/src     DESTDIR=${pkgdir} install
  make -C ${TARGET}/32/libstdc++-v3/include DESTDIR=${pkgdir} install
  make -C ${TARGET}/32/libstdc++-v3/libsupc++ DESTDIR=${pkgdir} install

  make DESTDIR=${pkgdir} install-libcc1

  install -d ${pkgdir}/usr/share/gdb/auto-load/usr/lib
  mv ${pkgdir}/usr/lib/libstdc++.so.6.*-gdb.py ${pkgdir}/usr/share/gdb/auto-load/usr/lib/

  rm ${pkgdir}/usr/lib{,32}/libstdc++.so*

  make DESTDIR=${pkgdir} install-fixincludes
  make -C gcc DESTDIR=${pkgdir} install-mkheaders

  make -C lto-plugin DESTDIR=${pkgdir} install

  install -dm755 ${pkgdir}/usr/lib/bfd-plugins/
  ln -s /${_libdir}/liblto_plugin.so ${pkgdir}/usr/lib/bfd-plugins/

  make -C ${TARGET}/libgomp           DESTDIR=${pkgdir} install-nodist_{libsubinclude,toolexeclib}HEADERS
  make -C ${TARGET}/libitm            DESTDIR=${pkgdir} install-nodist_toolexeclibHEADERS
  make -C ${TARGET}/libquadmath       DESTDIR=${pkgdir} install-nodist_libsubincludeHEADERS
  make -C ${TARGET}/libsanitizer      DESTDIR=${pkgdir} install-nodist_{saninclude,toolexeclib}HEADERS
  make -C ${TARGET}/libsanitizer/asan DESTDIR=${pkgdir} install-nodist_toolexeclibHEADERS
  make -C ${TARGET}/libsanitizer/tsan DESTDIR=${pkgdir} install-nodist_toolexeclibHEADERS
  make -C ${TARGET}/libsanitizer/lsan DESTDIR=${pkgdir} install-nodist_toolexeclibHEADERS
  make -C ${TARGET}/32/libgomp        DESTDIR=${pkgdir} install-nodist_toolexeclibHEADERS
  make -C ${TARGET}/32/libitm         DESTDIR=${pkgdir} install-nodist_toolexeclibHEADERS
  make -C ${TARGET}/32/libsanitizer   DESTDIR=${pkgdir} install-nodist_{saninclude,toolexeclib}HEADERS
  make -C ${TARGET}/32/libsanitizer/asan DESTDIR=${pkgdir} install-nodist_toolexeclibHEADERS

  make -C gcc DESTDIR=${pkgdir} install-man install-info
  rm -f ${pkgdir}/usr/share/man/man1/{gccgo,gfortran,gdc}.1
  rm -f ${pkgdir}/usr/share/info/{gccgo,gfortran,gnat-style,gnat_rm,gnat_ugn,gdc}.info

  make -C libcpp DESTDIR=${pkgdir} install
  make -C gcc DESTDIR=${pkgdir} install-po

# многие пакеты ожидают эту символическую ссылку
  ln -s gcc ${pkgdir}/usr/bin/cc

# Сценарии запуска для соответствия POSIX для c89 и c99
  install -Dm755 ${filedir}/c89 ${pkgdir}/usr/bin/c89
  install -Dm755 ${filedir}/c99 ${pkgdir}/usr/bin/c99

# Установка справочных страниц libstdС++
 make -C ${TARGET}/libstdc++-v3/doc DESTDIR=${pkgdir} doc-install-man

# Удаление файлов, предоставляемых lib32-gcc-libs
  rm -f ${pkgdir}/usr/lib32/lib{stdc++,gcc_s}.so

# Компиляция библиотек Python
  python -m compileall ${pkgdir}/usr/share/gcc-${pkgver%%+*}/
  python -O -m compileall ${pkgdir}/usr/share/gcc-${pkgver%%+*}/

  install -d ${pkgdir}/usr/share/licenses/${pkgname}/
  ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION ${pkgdir}/usr/share/licenses/${pkgname}/
}

# gcc-libs #########################################################################################################################

gcc-libs() {
  pkgname=gcc-libs
  shortdesc=("Runtime libraries shipped by GCC.")
  tags=("base sys-libs")
}

gcc-libs_prep() {
  cd ${srcdir}/gcc-${pkgver}/gcc-build

  make -C ${TARGET}/libgcc DESTDIR=${pkgdir} install-shared
  rm -f ${pkgdir}/${_libdir}/libgcc_eh.a
  make -C ${TARGET}/libgfortran        DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libgo              DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libgomp            DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libitm             DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libquadmath        DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libsanitizer/asan  DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libsanitizer/lsan  DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libsanitizer/ubsan DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libsanitizer/tsan  DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libstdc++-v3/src   DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libvtv             DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libobjc            DESTDIR=${pkgdir} install-libs
  make -C ${TARGET}/libstdc++-v3/po    DESTDIR=${pkgdir} install
  make -C ${TARGET}/libphobos          DESTDIR=${pkgdir} install

  rm -rf ${pkgdir}/$_libdir/include/d/
  rm -f ${pkgdir}/usr/lib/libgphobos.spec

  make -C ${TARGET}/libgomp     DESTDIR=${pkgdir} install-info
  make -C ${TARGET}/libitm      DESTDIR=${pkgdir} install-info
  make -C ${TARGET}/libquadmath DESTDIR=${pkgdir} install-info

# Удаление файлов, предоставляемых lib32-gcc-libs
  rm -rf ${pkgdir}/usr/lib32/

  install -Dm644 ${srcdir}/gcc-${pkgver}/COPYING.RUNTIME ${pkgdir}/usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION

#NOTE: Удаляем статические библиотеки которые предоставляются другими пакетами
  rm ${pkgdir}/usr/lib/libgphobos.a
  rm ${pkgdir}/usr/lib/libgdruntime.a
  rm ${pkgdir}/usr/lib/libstdc++.a
  rm ${pkgdir}/usr/lib/libgo.a
  rm ${pkgdir}/usr/lib/libgfortran.a
}

# gcc-fortran #########################################################################################################################

gcc-fortran() {
  pkgname=gcc-fortran
  shortdesc=("Fortran front-end for GCC.")
  tags=("develop dev-lang")
  adddep="gcc==${pkgver}"
}

gcc-fortran_prep() {
  cd ${srcdir}/gcc-${pkgver}/gcc-build

  make -C ${TARGET}/libgfortran DESTDIR=${pkgdir} install-cafexeclibLTLIBRARIES install-{toolexeclibDATA,nodist_fincludeHEADERS,gfor_cHEADERS}
  make -C ${TARGET}/32/libgfortran DESTDIR=$pkgdir install-cafexeclibLTLIBRARIES install-{toolexeclibDATA,nodist_fincludeHEADERS,gfor_cHEADERS}
  make -C ${TARGET}/libgomp DESTDIR=${pkgdir} install-nodist_fincludeHEADERS
  make -C gcc DESTDIR=${pkgdir} fortran.install-{common,man,info}
  install -Dm755 gcc/f951 ${pkgdir}/${_libdir}/f951

  ln -s gfortran ${pkgdir}/usr/bin/f95

  install -d ${pkgdir}/usr/share/licenses/${pkgname}/
  ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION ${pkgdir}/usr/share/licenses/${pkgname}/

# Удаляем не нужную пустую директорию
  rm -r -f ${pkgdir}/usr/include
}

# gcc-objc #########################################################################################################################

gcc-objc() {
  pkgname=gcc-objc
  shortdesc=("Objective-C front-end for GCC.")
  tags=("develop dev-lang")
  adddep="gcc==${pkgver}"
}

gcc-objc_prep() {
  cd ${srcdir}/gcc-${pkgver}/gcc-build

  make DESTDIR=${pkgdir} -C ${TARGET}/libobjc install-headers
  install -dm755 ${pkgdir}/${_libdir}
  install -m755 gcc/cc1obj{,plus} ${pkgdir}/${_libdir}/

  install -d ${pkgdir}/usr/share/licenses/${pkgname}/
  ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION ${pkgdir}/usr/share/licenses/${pkgname}/
}

# gcc-ada #########################################################################################################################

gcc-ada() {
  pkgname=gcc-ada
  shortdesc=("Ada front-end for GCC (GNAT).")
  tags=("develop dev-lang")
  adddep=("gcc==${pkgver}")
}

gcc-ada_prep() {
  cd ${srcdir}/gcc-${pkgver}/gcc-build/gcc

  make DESTDIR=${pkgdir} ada.install-{common,info}
  install -m755 gnat1 ${pkgdir}/${_libdir}

  cd ${srcdir}/gcc-${pkgver}/gcc-build/${TARGET}/libada
  make DESTDIR=${pkgdir} INSTALL="install" INSTALL_DATA="install -m644" install-libada

  cd ${srcdir}/gcc-${pkgver}/gcc-build/${TARGET}/32/libada
  make DESTDIR=${pkgdir} INSTALL="install"  INSTALL_DATA="install -m644" install-libada

  ln -s gcc ${pkgdir}/usr/bin/gnatgcc

  mv ${pkgdir}/${_libdir}/adalib/libgna{rl,t}-${pkgver%%.*}.so ${pkgdir}/usr/lib
  ln -s libgnarl-${pkgver%%.*}.so ${pkgdir}/usr/lib/libgnarl.so
  ln -s libgnat-${pkgver%%.*}.so ${pkgdir}/usr/lib/libgnat.so
  rm -f ${pkgdir}/${_libdir}/adalib/libgna{rl,t}.so

  install -d ${pkgdir}/usr/lib32/
  mv ${pkgdir}/${_libdir}/32/adalib/libgna{rl,t}-${pkgver%%.*}.so ${pkgdir}/usr/lib32
  ln -s libgnarl-${pkgver%%.*}.so ${pkgdir}/usr/lib32/libgnarl.so
  ln -s libgnat-${pkgver%%.*}.so ${pkgdir}/usr/lib32/libgnat.so
  rm -f ${pkgdir}/${_libdir}/32/adalib/libgna{rl,t}.so

  install -d ${pkgdir}/usr/share/licenses/${pkgname}/
  ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION ${pkgdir}/usr/share/licenses/${pkgname}/

# Удаляем не нужную пустую директорию
  rm -r -f ${pkgdir}/usr/include
}

# gcc-go #########################################################################################################################

gcc-go() {
  pkgname=gcc-go
  shortdesc=("Go front-end for GCC.")
  tags=("develop dev-lang")
  adddep=("gcc==${pkgver}")
  conflicts=("go")
}

gcc-go_prep() {
  cd ${srcdir}/gcc-${pkgver}/gcc-build

  make -C ${TARGET}/libgo DESTDIR=${pkgdir} install-exec-am
  make -C ${TARGET}/32/libgo DESTDIR=${pkgdir} install-exec-am
  make DESTDIR=${pkgdir} install-gotools
  make -C gcc DESTDIR=${pkgdir} go.install-{common,man,info}

  rm -f ${pkgdir}/usr/lib{,32}/libgo.so*
  rm -f ${pkgdir}/usr/lib/libgo.so*
  install -Dm755 gcc/go1 ${pkgdir}/${_libdir}/go1

  install -d ${pkgdir}/usr/share/licenses/${pkgname}/
  ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION ${pkgdir}/usr/share/licenses/${pkgname}/

# Удаляем не нужную пустую директорию
  rm -r -f ${pkgdir}/usr/include
}

# gcc-d #########################################################################################################################

gcc-d() {
  pkgname=gcc-d
  shortdesc=("D frontend for GCC.")
  tags=("develop dev-lang")
  adddep=("gcc==${pkgver}")
}

gcc-d_prep() {
  cd ${srcdir}/gcc-${pkgver}/gcc-build

  make -C gcc DESTDIR=${pkgdir} d.install-{common,man,info}

  install -Dm755 gcc/gdc ${pkgdir}/usr/bin/gdc
  install -Dm755 gcc/d21 ${pkgdir}/${_libdir}/d21

  make -C ${TARGET}/libphobos DESTDIR=${pkgdir} install
  rm -f ${pkgdir}/usr/lib/lib{gphobos,gdruntime}.so*
  rm -f ${pkgdir}/usr/lib32/lib{gphobos,gdruntime}.so*

  install -d ${pkgdir}/usr/include/dlang
  ln -s /${_libdir}/include/d ${pkgdir}/usr/include/dlang/gdc

  install -d ${pkgdir}/usr/share/licenses/${pkgname}/
  ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION ${pkgdir}/usr/share/licenses/${pkgname}/
}

# lib32-gcc-libs #########################################################################################################################

lib32-gcc-libs() {
  pkgname=lib32-gcc-libs
  shortdesc=("32-bit runtime libraries shipped by GCC.")
  tags=("lib32 dev-libs")
  adddep=("lib32-glibc")
  conflicts=("gcc-lib32")
}

lib32-gcc-libs_prep() {
  cd ${srcdir}/gcc-${pkgver}/gcc-build

  make -C ${TARGET}/32/libgcc DESTDIR=${pkgdir} install-shared
  rm -f ${pkgdir}/$_libdir/32/libgcc_eh.a

  make -C ${TARGET}/32/libatomic          DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/32/libgfortran        DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/32/libgo              DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/32/libgomp            DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/32/libitm             DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/32/libquadmath        DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/32/libsanitizer/asan  DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/32/libsanitizer/lsan  DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/32/libsanitizer/ubsan DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/32/libstdc++-v3/src   DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/32/libvtv             DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/32/libobjc            DESTDIR=${pkgdir} install-libs
  make -C ${TARGET}/libphobos             DESTDIR=${pkgdir} install

  rm -f ${pkgdir}/usr/lib32/libgphobos.spec

# Удаляем файлы предоставляемые gcc-libs
  rm -rf ${pkgdir}/usr/lib

# Удаляем ститические библиотеки
  rm -f ${pkgdir}/usr/lib32/*.a

  install -Dm644 ${srcdir}/gcc-${pkgver}/COPYING.RUNTIME ${pkgdir}/usr/share/licenses/lib32-gcc-libs/RUNTIME.LIBRARY.EXCEPTION
}
