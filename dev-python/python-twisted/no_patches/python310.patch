diff -upr twisted-twisted-21.7.0.orig/src/twisted/internet/test/test_threads.py twisted-twisted-21.7.0/src/twisted/internet/test/test_threads.py
--- twisted-twisted-21.7.0.orig/src/twisted/internet/test/test_threads.py	2021-07-26 18:03:56.000000000 +0300
+++ twisted-twisted-21.7.0/src/twisted/internet/test/test_threads.py	2021-12-07 00:48:58.573886527 +0200
@@ -108,13 +108,13 @@ class ThreadTestsBuilder(ReactorBuilder)
         result = []
 
         def threadCall():
-            result.append(threading.currentThread())
+            result.append(threading.current_thread())
             reactor.stop()
 
         reactor.callLater(0, reactor.callInThread, reactor.callFromThread, threadCall)
         self.runReactor(reactor, 5)
 
-        self.assertEqual(result, [threading.currentThread()])
+        self.assertEqual(result, [threading.current_thread()])
 
     def test_stopThreadPool(self):
         """
diff -upr twisted-twisted-21.7.0.orig/src/twisted/python/threadable.py twisted-twisted-21.7.0/src/twisted/python/threadable.py
--- twisted-twisted-21.7.0.orig/src/twisted/python/threadable.py	2021-07-26 18:03:56.000000000 +0300
+++ twisted-twisted-21.7.0/src/twisted/python/threadable.py	2021-12-07 00:49:02.183979399 +0200
@@ -104,7 +104,7 @@ _dummyID = object()
 def getThreadID():
     if threadingmodule is None:
         return _dummyID
-    return threadingmodule.currentThread().ident
+    return threadingmodule.current_thread().ident
 
 
 def isInIOThread():
diff -upr twisted-twisted-21.7.0.orig/src/twisted/python/threadpool.py twisted-twisted-21.7.0/src/twisted/python/threadpool.py
--- twisted-twisted-21.7.0.orig/src/twisted/python/threadpool.py	2021-07-26 18:03:56.000000000 +0300
+++ twisted-twisted-21.7.0/src/twisted/python/threadpool.py	2021-12-07 00:49:27.894640858 +0200
@@ -9,7 +9,7 @@ In most cases you can just use C{reactor
 instead of creating a thread pool directly.
 """
 
-from threading import Thread, currentThread
+from threading import Thread, current_thread
 from typing import List
 
 from twisted._threads import pool as _pool
@@ -44,7 +44,7 @@ class ThreadPool:
     name = None
 
     threadFactory = Thread
-    currentThread = staticmethod(currentThread)
+    currentThread = staticmethod(current_thread)
     _pool = staticmethod(_pool)
 
     def __init__(self, minthreads=5, maxthreads=20, name=None):
diff -upr twisted-twisted-21.7.0.orig/src/twisted/test/test_threadpool.py twisted-twisted-21.7.0/src/twisted/test/test_threadpool.py
--- twisted-twisted-21.7.0.orig/src/twisted/test/test_threadpool.py	2021-07-26 18:03:56.000000000 +0300
+++ twisted-twisted-21.7.0/src/twisted/test/test_threadpool.py	2021-12-07 00:49:41.461656589 +0200
@@ -404,11 +404,11 @@ class ThreadPoolTests(unittest.Synchrono
         event = threading.Event()
 
         def onResult(success, result):
-            threadIds.append(threading.currentThread().ident)
+            threadIds.append(threading.current_thread().ident)
             event.set()
 
         def func():
-            threadIds.append(threading.currentThread().ident)
+            threadIds.append(threading.current_thread().ident)
 
         tp = threadpool.ThreadPool(0, 1)
         tp.callInThreadWithCallback(onResult, func)
