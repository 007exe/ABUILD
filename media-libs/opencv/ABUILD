pkgname=opencv
pkgver=4.6.0
pkgbuild=1
arch=("auto")

shortdesc=("Open Source Computer Vision Library.")
longdesc=("The opencv package contains graphics libraries mainly aimed at real-time computer vision.")

source=("https://github.com/opencv/opencv/archive/${pkgver}/${pkgname}-${pkgver}.tar.gz"
"https://github.com/opencv/opencv_contrib/archive/${pkgver}/opencv_contrib-${pkgver}.tar.gz")

tags=("libs media-libs")
# vtk ant java-environment cudnn
build_deps=("cmake python-numpy python-setuptools mesa eigen hdf5 lapacke qt5-base glew pugixml
openmpi fmt tbb openexr gst-plugins-base libdc1394 cblas lapack libgphoto2 openjpeg2 ffmpeg protobuf")

# NOTE: Пока рано собирать этот пакет opencv-cuda
pkglist=("opencv-samples python-opencv")

# NOTE: Отключил Qt -DWITH_QT=ON

build() {
  go_src_dir
  burn_patches
  export JAVA_HOME="/usr/lib/jvm/default"
  _opts="-DCMAKE_BUILD_TYPE=Release \
       -DENABLE_CXX11=ON \
       -DWITH_OPENCL=ON \
       -DWITH_OPENGL=ON \
       -DWITH_TBB=ON \
       -DWITH_VULKAN=ON \
       -DWITH_QT=OFF \
       -DCMAKE_SKIP_RPATH=ON \
       -DENABLE_PRECOMPILED_HEADERS=OFF \
       -DWITH_WIN32UI=OFF \
       -DWITH_XIMEA=OFF \
       -DBUILD_WITH_DEBUG_INFO=OFF \
       -DBUILD_TESTS=OFF \
       -DBUILD_PERF_TESTS=OFF \
       -DBUILD_EXAMPLES=ON \
       -DBUILD_PROTOBUF=OFF \
       -DPROTOBUF_UPDATE_FILES=ON \
       -DINSTALL_C_EXAMPLES=ON \
       -DINSTALL_PYTHON_EXAMPLES=ON \
       -DCMAKE_INSTALL_PREFIX=/usr \
       -DCMAKE_INSTALL_LIBDIR=lib \
       -DCPU_BASELINE_DISABLE=SSE3 \
       -DCPU_BASELINE_REQUIRE=SSE2 \
       -DOPENCV_EXTRA_MODULES_PATH=${srcdir}/opencv_contrib-${pkgver}/modules \
       -DOPENCV_SKIP_PYTHON_LOADER=ON \
       -DLAPACK_LIBRARIES=/usr/lib/liblapack.so;/usr/lib/libblas.so;/usr/lib/libcblas.so \
       -DLAPACK_CBLAS_H=/usr/include/cblas.h \
       -DLAPACK_LAPACKE_H=/usr/include/lapacke.h \
       -DOPENCV_GENERATE_PKGCONFIG=ON \
       -DOPENCV_ENABLE_NONFREE=ON \
       -DOPENCV_JNI_INSTALL_PATH=lib \
       -DOPENCV_GENERATE_SETUPVARS=OFF \
       -DEIGEN_INCLUDE_PATH=/usr/include/eigen3 \
       -DWITH_GSTREAMER=OFF \
       -DWITH_GTK_2_X=OFF \
       -Wno-dev"
  cmake -B build ${_opts}
  cmake --build build -j${numjobs}

  DESTDIR=${pkgdir} cmake --install build
  install -Dm644 LICENSE -t ${pkgdir}/usr/share/licenses/${pkgname}

# Отдельный пакет samples
  mv ${pkgdir}/usr/share/opencv4/samples ${srcdir}

# Cимволические ссылки Java, необходимые некоторым бинарным блобам
#  ln -sr ${pkgdir}/usr/share/java/{opencv4/opencv-${pkgver//./},opencv}.jar
#  ln -sr ${pkgdir}/usr/lib/{libopencv_java${pkgver//./},libopencv_java}.so

  rm -r ${pkgdir}/usr/lib/python3*

  CFLAGS="${CFLAGS} -fno-lto" CXXFLAGS="${CXXFLAGS} -fno-lto" LDFLAGS="${LDFLAGS} -fno-lto" \
  cmake -B build-cuda ${_opts} \
    -DWITH_CUDA=ON \
    -DWITH_CUDNN=ON
  cmake --build build-cuda

}

opencv-samples() {
  pkgname=opencv-samples
  shortdesc=("Open Source Computer Vision Library samples.")
  longdesc=("The opencv package contains graphics libraries mainly aimed at real-time computer vision.")
#  adddep=("opencv")
}

opencv-samples_prep() {
  mkdir -p ${pkgdir}/usr/share/opencv4
  mv ${srcdir}/samples ${pkgdir}/usr/share/opencv4
  install -Dm644 ${srcdir}/opencv-${pkgver}/LICENSE -t ${pkgdir}/usr/share/licenses/$pkgname
}

python-opencv() {
  pkgname=python-opencv
  shortdesc=("Python bindings for OpenCV.")
  longdesc=("The opencv package contains graphics libraries mainly aimed at real-time computer vision.")
  adddep=("python-numpy")
}

python-opencv_prep() {
  go_src_dir
  DESTDIR=${pkgdir} cmake --install build/modules/python3
  install -Dm644 LICENSE -t ${pkgdir}/usr/share/licenses/${pkgname}
}

opencv-cuda() {
  pkgname=opencv-cuda
  shortdesc=("Open Source Computer Vision Library with CUDA support.")
  longdesc=("The opencv package contains graphics libraries mainly aimed at real-time computer vision.")
  provides=("opencv")
  conflicts=("opencv=${pkgver}")
}

multipkgname1_prep() {
  go_src_dir
  DESTDIR=${pkgdir} cmake --install build-cuda
  install -Dm644 LICENSE -t ${pkgdir}/usr/share/licenses/${pkgname}

# Предоставляет пакет samples
  rm -r ${pkgdir}/usr/share/opencv4/samples

# Cимволические ссылки Java, необходимые некоторым бинарным блобам
#  ln -sr ${pkgdir}/usr/share/java/{opencv4/opencv-${pkgver//./},opencv}.jar
#  ln -sr ${pkgdir}/usr/lib/{libopencv_java${pkgver//./},libopencv_java}.so

  rm -r ${pkgdir}/usr/lib/python3*
}
