# ABUILD generated by mkpkg_generator.sh

pkgname=binutils
pkgver=2.35.1
pkgbuild=2
arch=("auto")

shortdesc=("binutils (GNU binary development tools)")

build_deps="glibc zlib gcc bison"

tags=("develop sys-devel")
source=("http://ftp.gnu.org/gnu/binutils/binutils-${pkgver}.tar.bz2")

before_build() {
    go_src_dir
    burn_patches
    cd ..
	[[ ! -d binutils-gdb ]] && ln -s binutils-$pkgver binutils-gdb
    mkdir -p binutils-build
    cd binutils-gdb

  # Turn off development mode (-Werror, gas run-time checks, date in sonames)
  sed -i '/^development=/s/true/false/' bfd/development.sh

  # hack! - libiberty configure tests for header files using "$CPP $CPPFLAGS"
  sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" libiberty/configure
}

build() {
    go_src_dir
    cd ../binutils-build
#--enable-cet \ нужен ассемблер с подержкой CET
"$srcdir/binutils-gdb/configure" \
		--prefix=/usr \
		--libdir=/usr/lib${LIBDIRSUFFIX} \
		--with-lib-path=/usr/lib${LIBDIRSUFFIX}:/usr/local/lib${LIBDIRSUFFIX} \
		--enable-deterministic-archives \
		--enable-gold \
		--enable-ld=default \
		--enable-lto \
		--enable-plugins \
		--enable-relro \
		--enable-shared \
		--enable-targets=x86_64-pep \
		--enable-threads \
		--disable-gdb \
		--disable-werror \
		--with-debuginfod \
		--with-pic \
		--with-system-zlib

	make configure-host
	make tooldir=/usr

  # unset LDFLAGS as testsuite makes assumptions about which ones are active
  # ignore failures in gold testsuite...
  make -k LDFLAGS="" check || true
}

after_build() {
	go_src_dir
	cd ../binutils-build

	make DESTDIR=${pkgdir} install
    
    # Remove unwanted files
    rm -f "$pkgdir"/usr/share/man/man1/{dlltool,nlmconv,windres,windmc}*
    
    # No shared linking to these files outside binutils
    rm -f "$pkgdir"/usr/lib${LIBDIRSUFFIX}/lib{bfd,opcodes}.so
    echo 'INPUT( /usr/lib${LIBDIRSUFFIX}/libbfd.a -liberty -lz -ldl )' > "$pkgdir/usr/lib${LIBDIRSUFFIX}/libbfd.so"
    echo 'INPUT( /usr/lib${LIBDIRSUFFIX}/libopcodes.a -lbfd )' > "$pkgdir/usr/lib${LIBDIRSUFFIX}/libopcodes.so"
}
