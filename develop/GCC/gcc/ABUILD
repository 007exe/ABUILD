# ABUILD generated by chip
# Свмый страшный пакет
pkgname=gcc
pkgver=11.1.0
pkgbuild=3
arch=("auto")

shortdesc=("The GNU Compiler Collection - C and C++ frontends")
longdesc=("GCC is the collection of GNU compilers. This package contains the parts of the compiler collection that are required to compile C and C ++ code. Other packages add support for Ada, Fortran, Objective-C and Go.")

tags=("develop sys-devel")

adddep="binutils bison gcc-libs==${pkgver}"

source=("https://sourceware.org/pub/gcc/releases/gcc-${pkgver}/gcc-${pkgver}.tar.xz")

build_deps="libmpc binutils python flex gcc-ada gcc-d gcc-fortran gcc-go gcc-objc"

pkglist="gcc-libs gcc-ada gcc-d gcc-fortran gcc-go gcc-objc"

# Надо будет заменить на x86_64-pc-linux-gnu или оставить как есть
TARGET=x86_64-slackware-linux

_libdir=usr/lib${LIBDIRSUFFIX}/gcc/$TARGET/${pkgver%%+*}
_majorver=${pkgver%%.*}

gcc-libs() {
  pkgname=gcc-libs
  shortdesc="Runtime libraries that comes with gcc"
}

gcc-fortran() {
  pkgname=gcc-fortran
  shortdesc=("Fortran support for GCC")
  longdesc=("This package contains those parts of the compiler collection needed to compile Fortran code.  The base gcc package is also required.  The GNU Fortran compiler is able to compile nearly all standard-compliant Fortran 95, Fortran 90, and Fortran 77 programs, including a number of standard and non-standard extensions, and can be used on real-world programs.  In particular, the supported extensions include OpenMP, Cray-style pointers, and several Fortran 2003 features such as enumeration, stream I/O, and some of the enhancements to allocatable array support from TR 15581.")
}

gcc-objc() {
  pkgname=gcc-objc
  shortdesc=("Objective C support for GCC")
  longdesc=("Objective-C support for the GNU Compiler Collection. This package contains those parts of the compiler collection needed to compile code written in Objective-C.  Objective-C was originally developed to add object-oriented extensions to the C language, and is best known as the native language of the NeXT computer. The base gcc package is also required.")
  adddep="gcc-libs"
}

gcc-ada() {
  pkgname=gcc-ada
  shortdesc=("Ada front-end for GCC (GNAT)")
  longdesc=("Ada 95 support for the GNU Compiler Collection. This package contains those parts of the compiler collection needed to compile Ada 95 code.  Ada95 is the object oriented successor to the Ada83 language.  The base gcc package is also required.")
  conflicts="gcc-gnat"
}

gcc-go() {
  pkgname=gcc-go
  shortdesc="Go front-end for GCC"
}

gcc-d() {
  pkgname=gcc-d
  shortdesc="D frontend for GCC"
}

#gcc-lib32_prep() {
#  pkgname=gcc-lib32
#  shortdesc="32-bit runtime libraries shipped by GCC"
#}

before_build() {
	go_src_dir
	burn_patches

# Do not run fixincludes
  sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

# Installs x86_64 libraries /lib
#  sed -i '/m64=/s/lib64/lib/' gcc/config/i386/t-linux64

# hack! - some configure tests for header files using "$CPP $CPPFLAGS"
  sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" {libiberty,gcc}/configure
}

build() {
	go_src_dir

  mkdir -p gcc.build.lnx
  cd gcc.build.lnx

# using -pipe causes spurious test-suite failures
# http://gcc.gnu.org/bugzilla/show_bug.cgi?id=48565
  CFLAGS=${CFLAGS/-pipe/}
  CXXFLAGS=${CXXFLAGS/-pipe/}

# --disable-multilib собрать только 64 битные библиотеки, --enable-multilib собрать 32х битные библиотеки

  ../configure --prefix=/usr \
               --libdir=/usr/lib${LIBDIRSUFFIX} \
               --libexecdir=/usr/lib${LIBDIRSUFFIX} \
               --mandir=/usr/share/man \
               --infodir=/usr/share/info \
               --enable-cet=auto \
               --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d \
               --disable-multilib \
               --enable-shared \
               --enable-threads=posix \
               --with-system-zlib \
               --with-isl \
               --enable-__cxa_atexit \
               --disable-libunwind-exceptions \
               --enable-clocale=gnu \
               --disable-libstdcxx-pch \
               --disable-libssp \
               --enable-gnu-unique-object \
               --enable-linker-build-id \
               --enable-lto \
               --enable-plugin \
               --enable-install-libiberty \
               --with-linker-hash-style=gnu \
               --enable-gnu-indirect-function \
               --enable-checking=release \
               --enable-default-pie \
               --enable-default-ssp \
               --enable-gnu-indirect-function \
               --target=${TARGET} \
               --host=${TARGET} \
               --build=${TARGET} \
               --disable-werror
               gdc_include_dir=/usr/include/dlang/gdc \

## --gdc_include_dir=/usr/include/dlang/gdc
## --docdir=/usr/share/doc/${pkgname}-${pkgver} \

  make -j${numjobs}

# make documentation
echo "=====> make documentation"
#  make -C ${TARGET}/libstdc++-v3/doc doc-man-doxygen

  cd ${srcdir}/gcc-${pkgver}/gcc.build.lnx

  make -C gcc DESTDIR="$pkgdir" install-driver install-cpp install-gcc-ar \
  c++.install-common install-headers install-plugin install-lto-wrapper

  install -m755 -t "$pkgdir/usr/bin/" gcc/gcov{,-tool}
  install -m755 -t "$pkgdir/${_libdir}/" gcc/{cc1,cc1plus,collect2,lto1}

  make -C ${TARGET}/libgcc DESTDIR="$pkgdir" install
#make -C ${TARGET}/32/libgcc DESTDIR="$pkgdir" install
#rm -f "$pkgdir"/usr/lib{,32}/libgcc_s.so*
  rm -rf "$pkgdir"/usr/lib${LIBDIRSUFFIX}/gcc/${TARGET}/lib*

  make -C ${TARGET}/libstdc++-v3/src		DESTDIR="$pkgdir" install
  make -C ${TARGET}/libstdc++-v3/include	DESTDIR="$pkgdir" install
  make -C ${TARGET}/libstdc++-v3/libsupc++	DESTDIR="$pkgdir" install
  make -C ${TARGET}/libstdc++-v3/python		DESTDIR="$pkgdir" install
##make -C ${TARGET}/32/libstdc++-v3/src	DESTDIR="$pkgdir" install
##make -C ${TARGET}/32/libstdc++-v3/include	DESTDIR="$pkgdir" install
##make -C ${TARGET}/32/libstdc++-v3/libsupc++	DESTDIR="$pkgdir" install

  make DESTDIR="$pkgdir" install-libcc1

  install -d ${pkgdir}/usr/share/gdb/auto-load/usr/lib${LIBDIRSUFFIX}
  mv ${pkgdir}/usr/lib${LIBDIRSUFFIX}/libstdc++.so.6.*-gdb.py ${pkgdir}/usr/share/gdb/auto-load/usr/lib${LIBDIRSUFFIX}/

#rm "$pkgdir"/usr/lib{,32}/libstdc++.so*

  make DESTDIR="$pkgdir" install-fixincludes
  make -C gcc DESTDIR="$pkgdir" install-mkheaders

  make -C lto-plugin DESTDIR="$pkgdir" install

  install -dm755 "$pkgdir"/usr/lib${LIBDIRSUFFIX}/bfd-plugins/
  ln -s /${_libdir}/liblto_plugin.so \
    "$pkgdir/usr/lib${LIBDIRSUFFIX}/bfd-plugins/"

  make -C ${TARGET}/libgomp		DESTDIR="$pkgdir" install-nodist_{libsubinclude,toolexeclib}HEADERS
  make -C ${TARGET}/libitm		DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
  make -C ${TARGET}/libquadmath		DESTDIR="$pkgdir" install-nodist_libsubincludeHEADERS
  make -C ${TARGET}/libsanitizer	DESTDIR="$pkgdir" install-nodist_{saninclude,toolexeclib}HEADERS
  make -C ${TARGET}/libsanitizer/asan	DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
  make -C ${TARGET}/libsanitizer/tsan	DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
  make -C ${TARGET}/libsanitizer/lsan	DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
##make -C ${TARGET}/32/libgomp		DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
##make -C ${TARGET}/32/libitm			DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
##make -C ${TARGET}/32/libsanitizer		DESTDIR="$pkgdir" install-nodist_{saninclude,toolexeclib}HEADERS
##make -C ${TARGET}/32/libsanitizer/asan	DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS

  make -C libiberty DESTDIR="$pkgdir" install
  install -m644 libiberty/pic/libiberty.a "$pkgdir/usr/lib${LIBDIRSUFFIX}"

  make -C gcc DESTDIR="$pkgdir" install-man install-info
  rm -f "$pkgdir"/usr/share/man/man1/{gccgo,gfortran,gdc}.1
  rm -f "$pkgdir"/usr/share/info/{gccgo,gfortran,gnat-style,gnat_rm,gnat_ugn,gdc}.info

  make -C libcpp DESTDIR="$pkgdir" install
  make -C gcc DESTDIR="$pkgdir" install-po

# many packages expect this symlink
  ln -s gcc "$pkgdir"/usr/bin/cc

# POSIX conformance launcher scripts for c89 and c99
  install -Dm755 "${filedir}/c89" "$pkgdir/usr/bin/c89"
  install -Dm755 "${filedir}/c99" "$pkgdir/usr/bin/c99"

# install the libstdc++ man pages
# make -C ${TARGET}/libstdc++-v3/doc DESTDIR="$pkgdir" doc-install-man

## remove files provided by lib32-gcc-libs
##rm -f "$pkgdir"/usr/lib32/lib{stdc++,gcc_s}.so

# byte-compile python libraries
  python -m compileall "$pkgdir/usr/share/gcc-${pkgver%%+*}/"
  python -O -m compileall "$pkgdir/usr/share/gcc-${pkgver%%+*}/"

# Install Runtime Library Exception
  install -d "$pkgdir/usr/share/licenses/$pkgname/"
  ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/usr/share/licenses/$pkgname/"

###########################################################################################################
# Хрен его знает но почему то в пакет gcc попадают либы которые должны быть только в gcc-libs
# что приводит к поломкам зависимостей
# для исправления этой проблемы служит этот костыль.
###########################################################################################################
echo "Fix gcc удаляю илшние то что не должно было попасть в пакет gcc, а должно находится в gcc-libs"
  rm -f $pkgdir/usr/lib${LIBDIRSUFFIX}/libstdc++.*
  rm -f $pkgdir/usr/lib${LIBDIRSUFFIX}/libcc1.la
  rm -f $pkgdir/usr/lib${LIBDIRSUFFIX}/libgcc_s.so
  rm -f $pkgdir/usr/lib${LIBDIRSUFFIX}/libgcc_s.so.1
  rm -f $pkgdir/usr/lib${LIBDIRSUFFIX}/libsupc++.la
  rm -f "$pkgdir"/usr/share/info/dir
###########################################################################################################
}

###########################################################################################################
# Упаковка паковка gcc-libs
###########################################################################################################

gcc-libs_prep() {
	cd ${srcdir}/gcc-${pkgver}/gcc.build.lnx

  make -C ${TARGET}/libgcc DESTDIR="$pkgdir" install-shared
  rm -f "$pkgdir/$_libdir/libgcc_eh.a"

  make -C ${TARGET}/libgfortran         DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libgo               DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libgomp             DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libitm              DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libquadmath         DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libsanitizer/asan   DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libsanitizer/lsan   DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libsanitizer/ubsan  DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libsanitizer/tsan   DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libstdc++-v3/src    DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libvtv              DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  make -C ${TARGET}/libobjc             DESTDIR="$pkgdir" install-libs
  make -C ${TARGET}/libstdc++-v3/po     DESTDIR="$pkgdir" install
  make -C ${TARGET}/libphobos           DESTDIR="$pkgdir" install

  rm -rf "$pkgdir"/$_libdir/include/d/
  rm -f "$pkgdir"/usr/lib${LIBDIRSUFFIX}/libgphobos.spec

  make -C ${TARGET}/libgomp     DESTDIR="$pkgdir" install-info
  make -C ${TARGET}/libitm      DESTDIR="$pkgdir" install-info
  make -C ${TARGET}/libquadmath DESTDIR="$pkgdir" install-info


# remove files provided by lib32-gcc-libs
##  rm -rf "$pkgdir"/usr/lib32/

# Install Runtime Library Exception
  install -Dm644 "$srcdir/gcc-${pkgver}/COPYING.RUNTIME" \
    "$pkgdir/usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION"

######################################################
echo "Fix удалить .a и .la и лишние файлы"
rm -f "$pkgdir"/usr/lib${LIBDIRSUFFIX}/*.a
rm -f "$pkgdir"/usr/lib${LIBDIRSUFFIX}/*.la
rm -f "$pkgdir"/usr/share/info/dir
rm -r -f "$pkgdir"/usr/lib64/gcc
rm -r -f "$pkgdir"/usr/usr/lib
######################################################
}

###########################################################################################################
# Упаковка GCC
###########################################################################################################

after_build() {
echo "after"
}

###########################################################################################################
# Упаковка паковка gcc-fortran
###########################################################################################################

gcc-fortran_prep() {
	cd ${srcdir}/gcc-${pkgver}/gcc.build.lnx

  make -C ${TARGET}/libgfortran DESTDIR="$pkgdir" install-cafexeclibLTLIBRARIES \
    install-{toolexeclibDATA,nodist_fincludeHEADERS,gfor_cHEADERS}
##  make -C ${TARGET}/32/libgfortran DESTDIR=$pkgdir install-cafexeclibLTLIBRARIES \
##    install-{toolexeclibDATA,nodist_fincludeHEADERS,gfor_cHEADERS}
  make -C ${TARGET}/libgomp DESTDIR="$pkgdir" install-nodist_fincludeHEADERS
  make -C gcc DESTDIR="$pkgdir" fortran.install-{common,man,info}
  install -Dm755 gcc/f951 "$pkgdir/${_libdir}/f951"

  ln -s gfortran "$pkgdir/usr/bin/f95"

  # Install Runtime Library Exception
  install -d "$pkgdir/usr/share/licenses/$pkgname/"
  ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/usr/share/licenses/$pkgname/"

######################################################
echo "Fix лишние файлыи каталоги"
rm -r -f "$pkgdir"/usr/include
rm -f "$pkgdir"/usr/lib64/gcc/x86_64-slackware-linux/11.1.0/libcaf_single.la
rm -f "$pkgdir"/usr/share/info/dir
######################################################
}

###########################################################################################################
# Упаковка паковка gcc-objc
###########################################################################################################

gcc-objc_prep() {
	cd ${srcdir}/gcc-${pkgver}/gcc.build.lnx

  make DESTDIR="$pkgdir" -C ${TARGET}/libobjc install-headers
  install -dm755 "$pkgdir/${_libdir}"
  install -m755 gcc/cc1obj{,plus} "$pkgdir/${_libdir}/"

# Install Runtime Library Exception
  install -d "$pkgdir/usr/share/licenses/$pkgname/"
  ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/usr/share/licenses/$pkgname/"
# Fix Перемещение heder хрен его знает ведь хедеры должны устанавливатся в usr/lib${LIBDIRSUFFIX} н оу порно лезут в usr/lib
mv "$pkgdir"/usr/lib "$pkgdir"/usr/lib${LIBDIRSUFFIX}
}

###########################################################################################################
# Упаковка паковка gcc-ada
###########################################################################################################

gcc-ada_prep() {
	cd ${srcdir}/gcc-${pkgver}/gcc.build.lnx/gcc

  make DESTDIR="$pkgdir" ada.install-{common,info}
  install -m755 gnat1 "$pkgdir/${_libdir}"

  cd "$srcdir"/gcc-${pkgver}/gcc.build.lnx/${TARGET}/libada
  make DESTDIR=${pkgdir} INSTALL="install" \
    INSTALL_DATA="install -m644" install-libada

##  cd "$srcdir"/gcc-${pkgver}/gcc.build.lnx/${TARGET}/32/libada
##  make DESTDIR=${pkgdir} INSTALL="install" \
##    INSTALL_DATA="install -m644" install-libada

  ln -s gcc "$pkgdir/usr/bin/gnatgcc"

# insist on dynamic linking, but keep static libraries because gnatmake complains
  mv "$pkgdir"/${_libdir}/adalib/libgna{rl,t}-${_majorver}.so "$pkgdir/usr/lib${LIBDIRSUFFIX}"
  ln -s libgnarl-${_majorver}.so "$pkgdir/usr/lib${LIBDIRSUFFIX}/libgnarl.so"
  ln -s libgnat-${_majorver}.so "$pkgdir/usr/lib${LIBDIRSUFFIX}/libgnat.so"
  rm -f "$pkgdir"/${_libdir}/adalib/libgna{rl,t}.so

##  install -d "$pkgdir/usr/lib32/"
##  mv "$pkgdir"/${_libdir}/32/adalib/libgna{rl,t}-${_majorver}.so "$pkgdir/usr/lib32"
##  ln -s libgnarl-${_majorver}.so "$pkgdir/usr/lib32/libgnarl.so"
##  ln -s libgnat-${_majorver}.so "$pkgdir/usr/lib32/libgnat.so"
##  rm -f "$pkgdir"/${_libdir}/32/adalib/libgna{rl,t}.so

  # Install Runtime Library Exception
  install -d "$pkgdir/usr/share/licenses/$pkgname/"
  ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/usr/share/licenses/$pkgname/"
######################################################
echo "Fix gcc-ada удалить лишние файлыи каталоги"
rm -r -f "$pkgdir"/usr/include
rm -f "$pkgdir"/usr/share/info/dir
######################################################
}

###########################################################################################################
# Упаковка паковка gcc-go
###########################################################################################################

gcc-go_prep() {
	cd ${srcdir}/gcc-${pkgver}/gcc.build.lnx

  make -C ${TARGET}/libgo DESTDIR="$pkgdir" install-exec-am
##  make -C ${TARGET}/32/libgo DESTDIR="$pkgdir" install-exec-am
  make DESTDIR="$pkgdir" install-gotools
  make -C gcc DESTDIR="$pkgdir" go.install-{common,man,info}

##  rm -f "$pkgdir"/usr/lib{,32}/libgo.so*
  install -Dm755 gcc/go1 "$pkgdir/${_libdir}/go1"

# Install Runtime Library Exception
  install -d "$pkgdir/usr/share/licenses/$pkgname/"
  ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/usr/share/licenses/$pkgname/"

######################################################
echo "Fix gcc-go удалить лишние файлыи каталоги"
rm -r -f "$pkgdir"/usr/include
rm -f "$pkgdir"/usr/lib64/libgo.la
rm -f "$pkgdir"/usr/share/info/dir
######################################################
}

###########################################################################################################
# Упаковка паковка gcc-d
###########################################################################################################

gcc-d_prep() {
  cd ${srcdir}/gcc-${pkgver}/gcc.build.lnx

  make -C gcc DESTDIR="$pkgdir" d.install-{common,man,info}

  install -Dm755 gcc/gdc "$pkgdir"/usr/bin/gdc
  install -Dm755 gcc/d21 "$pkgdir"/"$_libdir"/d21

  make -C ${TARGET}/libphobos DESTDIR="$pkgdir" install
  rm -f "$pkgdir/usr/lib${LIBDIRSUFFIX}/"lib{gphobos,gdruntime}.so*
##  rm -f "$pkgdir/usr/lib32/"lib{gphobos,gdruntime}.so*

  install -d "$pkgdir"/usr/include/dlang
  ln -s /"${_libdir}"/include/d "$pkgdir"/usr/include/dlang/gdc

  # Install Runtime Library Exception
  install -d "$pkgdir/usr/share/licenses/$pkgname/"
  ln -s /usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/usr/share/licenses/$pkgname/"

######################################################
echo "Fix gcc-d удалить лишние файлыи каталоги"
rm -f "$pkgdir"/usr/lib${LIBDIRSUFFIX}/libgdruntime.la
rm -f "$pkgdir"/usr/lib${LIBDIRSUFFIX}/libgphobos.la
rm -f "$pkgdir"/usr/share/info/dir
######################################################
}

###########################################################################################################
# Упаковка паковка gcc-lib32
###########################################################################################################

##gcc-lib32_prep() {
##	cd ${srcdir}/gcc-${pkgver}/gcc.build.lnx
#
##  make -C ${TARGET}/32/libgcc DESTDIR="$pkgdir" install-shared
##  rm -f "$pkgdir/$_libdir/32/libgcc_eh.a"
#
##  for lib in libatomic \
##             libgfortran \
##             libgo \
##             libgomp \
##             libitm \
##             libquadmath \
##             libsanitizer/{a,l,ub}san \
##             libstdc++-v3/src \
##             libvtv; do
##    make -C ${TARGET}/32/$lib DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
##  done
#
##  make -C ${TARGET}/32/libobjc DESTDIR="$pkgdir" install-libs
#
##  make -C ${TARGET}/libphobos DESTDIR="$pkgdir" install
##  rm -f "$pkgdir"/usr/lib32/libgphobos.spec
#
#  # remove files provided by gcc-libs
##  rm -rf "$pkgdir"/usr/lib
#
#  # Install Runtime Library Exception
##  install -Dm644 "$srcdir/gcc-${pkgver}/COPYING.RUNTIME" \
##    "$pkgdir/usr/share/licenses/lib32-gcc-libs/RUNTIME.LIBRARY.EXCEPTION"
##}
