pkgname=vtk
pkgver=9.1.0
pkgbuild=1
arch=("auto")

shortdesc=("Software system for 3D computer graphics, image processing, and visualization.")
longdesc=("The Visualization Toolkit (VTK) is open source software for manipulating and displaying scientific data.")

source=("https://www.vtk.org/files/release/${pkgver%.*}/VTK-${pkgver}.tar.gz")

tags=("dev-libs libs")

# gnuplot openimagedenoise openmp python-matplotlib qt5-webkit
# -DVTK_WRAP_JAVA=ON java-environment
# -DVTKOSPRAY_ENABLE_DENOISER=ON -DVTK_ENABLE_OSPRAY=ON ospray

# NOTE: Следующие модули отключены из-за отсутствия зависимостей
# -DVTK_MODULE_ENABLE_VTK_RenderingOpenVR=DONT_WANT openvr
# -DVTK_MODULE_ENABLE_VTK_IOPDAL=DONT_WANT pdal
# -DVTK_MODULE_ENABLE_VTK_IOOpenVDB=DONT_WANT openvdb
# -DVTK_MODULE_USE_EXTERNAL_VTK_cgns=OFF cgns
build_deps=("gcc-libs double-conversion tbb adios2 cmake boost doxygen ffmpeg gdal liblas libxt openmpi postgresql qt5-base qt5-tools qt5-x11extras tk unixodbc wget eigen expat fmt freetype gl2ps glew hdf5 libjpeg-turbo jsoncpp libharu proj libxml2 lz4 xz python-mpi4py netcdf libogg libpng pugixml rapidjson sqlite libtheora libtiff utf8cpp zfp zlib")

# NOTE: Это опцианальные зависимости
removedep=("gnuplot graphviz openmpi qt5-x11extras qt5-webkit tk adios2 cgns ffmpeg fmt gdal gl2ps glew hdf5 jsoncpp libarchive libharu liblas lz4 netcdf openimagedenoise openvdb openvr ospray pdal postgresql proj sqlite unixodbc")

build() {
  go_src_dir
  sed -i "s|2.4.0|2.3.0|" ThirdParty/libharu/CMakeLists.txt
  sed -i "s|8.1.0|8.0.1|" ThirdParty/fmt/CMakeLists.txt

# NOTE: накладываем патчи
  patch -p1 -d ThirdParty/vtkm/vtkvtkm/vtk-m < $startdir/patches/vtkm-tbb-2021.patch
  patch -p1 < $startdir/patches/vtk-ffmpeg5.patch

  export JAVA_HOME=/usr/lib/jvm/default
# Путь к tcl
  local _tkver=$(echo 'puts $tcl_version' | tclsh)
  cmake -B build \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_INSTALL_LIBDIR=lib \
    -DCMAKE_INSTALL_LICENSEDIR=share/licenses/vtk \
    -DCMAKE_SKIP_RPATH=OFF \
    -DCMAKE_SKIP_INSTALL_RPATH=ON \
    -DBUILD_SHARED_LIBS=ON \
    -DVTK_BUILD_ALL_MODULES=ON \
    -DVTK_INSTALL_TCL_DIR=/usr/lib/tcl${_tkver}/vtk/ \
    -DVTK_LEGACY_REMOVE=ON \
    -DVTK_SMP_ENABLE_OPENMP=ON \
    -DVTK_SMP_IMPLEMENTATION_TYPE=TBB \
    -DVTK_PYTHON_VERSION=3 \
    -DVTK_USE_MPI=ON \
    -DVTK_USE_TK=ON \
    -DVTK_VERSIONED_INSTALL=OFF \
    -DVTK_WRAP_JAVA=OFF\
    -DVTK_WRAP_PYTHON=ON \
    -DVTKOSPRAY_ENABLE_DENOISER=ON \
    -DVTK_ENABLE_OSPRAY=OFF \
    -DVTKm_ENABLE_HDF5_IO=ON \
    -DVTKm_ENABLE_MPI=ON \
    -DVTKm_ENABLE_OPENMP=ON \
    -DVTK_USE_EXTERNAL=ON \
    -DVTK_MODULE_USE_EXTERNAL_VTK_cgns=OFF \
    -DVTK_MODULE_USE_EXTERNAL_VTK_cli11=OFF \
    -DVTK_MODULE_USE_EXTERNAL_VTK_exprtk=OFF \
    -DVTK_MODULE_USE_EXTERNAL_VTK_ioss=OFF \
    -DVTK_MODULE_USE_EXTERNAL_VTK_pegtl=OFF \
    -DVTK_MODULE_ENABLE_VTK_DomainsMicroscopy=NO \
    -DVTK_MODULE_ENABLE_VTK_FiltersOpenTURNS=NO \
    -DVTK_MODULE_ENABLE_VTK_RenderingOpenVR=DONT_WANT \
    -DVTK_MODULE_ENABLE_VTK_IOPDAL=DONT_WANT \
    -DVTK_MODULE_ENABLE_VTK_IOOpenVDB=DONT_WANT \
    -Wno-dev
  make -C build -j${numjobs}
  make -C build DESTDIR=${pkgdir} install
# Перемещаем vtk.jar и библиотеки
  install -dv ${pkgdir}/usr/share/java/vtk
  mv -v ${pkgdir}/usr/lib/java/vtk.jar ${pkgdir}/usr/share/java/vtk
  mv ${pkgdir}/usr/lib/java/vtk-Linux-x86_64/*.so ${pkgdir}/usr/lib/
  rmdir ${pkgdir}/usr/lib/java/{vtk-Linux-x86_64/,}

# Удаляем сторонние исправления CMake для более старых версий, а также дубликаты.
  rm -rv ${pkgdir}/usr/lib/cmake/vtk/patches/3.{1{3,6,8,9},20}
  rm -rv ${pkgdir}/usr/lib/cmake/vtk/vtkm/{Find*.cmake,cmake/{Find*.cmake,3.15}}
}
