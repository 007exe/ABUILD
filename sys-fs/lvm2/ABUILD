pkgname=lvm2
pkgver=2.03.13
pkgbuild=1
arch=("auto")

shortdesc=("Logical Volume Manager version 2")
longdesc=("Heinz Mauelshagen's LVM (Logical Volume Manager) for Linux. LVM adds an additional layer between the physical peripherals and the low-level I/O interface to get a logical view of disks. This allows the concatenation of several disks (so-called physical volumes or PVs) to form a storage pool (so-called Volume Group or VG) with allocation units called physical extents (called PE). With LVM, you can extend, resize, or relocate storage dynamically.")

build_deps="readline eudev libaio"

tags=("base sys-fs")

pkglist="dmap"

source=("https://github.com/lvmteam/lvm2/archive/v${pkgver//./_}.tar.gz")

config_files="etc/lvm/lvm.conf"

build() {
  go_src_dir
  burn_patches
# remove install section from systemd units that are enabled by default
  sed -i -e '/^\[Install\]$/,$d' \
    scripts/dm_event_systemd_red_hat.socket.in \
    scripts/lvm2_lvmpolld_systemd_red_hat.socket.in \
    scripts/lvm2_monitoring_systemd_red_hat.service.in

  ./configure \
    --libdir=/usr/lib${LIBDIRSUFFIX} \
    --with-usrlibdir=/usr/lib${LIBDIRSUFFIX} \
    --sysconfdir=/etc \
    --localstatedir=/var \
    --enable-applib \
    --enable-cmdlib \
    --enable-dmeventd \
    --enable-lvmetad \
    --enable-lvmpolld \
    --enable-pkgconfig \
    --enable-readline \
    --enable-udev_rules \
    --enable-udev_sync \
    --enable-use-lvmetad \
    --with-cache=internal \
    --mandir=/usr/share/man \
    --docdir=/usr/share/doc \
    --with-default-dm-run-dir=/run \
    --with-default-locking-dir=/run/lock/lvm \
    --with-default-pid-dir=/run \
    --with-default-run-dir=/run/lvm \
    --with-thin=internal \
    --with-udev-prefix=""

  make -j${numjobs}
  make DESTDIR=${pkgdir} install_lvm2
#  cd liblvm
  make DESTDIR=${pkgdir} install
  cd ..

  install -d ${pkgdir}/etc/lvm/{archive,backup}

# Move the binary and shared library to /sbin and /lib{,64}:
  mkdir -p ${pkgdir}/lib${LIBDIRSUFFIX}
  ( cd ${pkgdir}/usr/lib${LIBDIRSUFFIX}
    for file in lib*.so.?.* ; do
        mv $file ../../lib${LIBDIRSUFFIX}
        ln -sf ../../lib${LIBDIRSUFFIX}/$file .
    done
  )

# The Makefile is DIW.
  ( cd ${pkgdir}/usr/lib${LIBDIRSUFFIX}
       find . -name "*.so" -type l | cut -b3- | while read file ; do
# These two excluded files are in ./device-mapper/ subdir
       if [ "$file" != "libdevmapper-event-lvm2mirror.so" -a "$file" != "libdevmapper-event-lvm2snapshot.so" ]; then
             rm -f $file
             ln -sf $(basename ../../lib${LIBDIRSUFFIX}/${file}.?.*) $file
       fi
  done
  )

  mkdir -p ${pkgdir}/etc/init.d/
  install -m755  ${filedir}/lvm ${pkgdir}/etc/init.d/
  set +e
}

dmap() {
	pkgname="device-mapper"
	shortdesc="Device mapper userspace library and tools"
	longdesc="Device mapper userspace library and tools"
}

dmap_prep() {
  go_src_dir
  set -e
  make DESTDIR=${pkgdir} install_device-mapper

# Move the binary and shared library to /sbin and /lib{,64}:
  mkdir -p ${pkgdir}/lib${LIBDIRSUFFIX}
  ( cd ${pkgdir}/usr/lib${LIBDIRSUFFIX}
    for file in lib*.so.?.* ; do
        mv $file ../../lib${LIBDIRSUFFIX}
        ln -sf ../../lib${LIBDIRSUFFIX}/$file .
    done
  )

# The Makefile is DIW.
  ( cd ${pkgdir}/usr/lib${LIBDIRSUFFIX}
    find . -name "*.so" -type l | cut -b3- | while read file ; do
# These two excluded files are in ./device-mapper/ subdir
    if [ "$file" != "libdevmapper-event-lvm2mirror.so" -a "$file" != "libdevmapper-event-lvm2snapshot.so" ]; then
         rm -f $file
         ln -sf $(basename ../../lib${LIBDIRSUFFIX}/${file}.?.*) $file
    fi
    done
  )
  set +e
}


